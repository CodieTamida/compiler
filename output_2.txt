token                lexeme    
-------------------------------
keyword              function
identifier           twoSum
separator            (
identifier           self
separator            ,
unknown              nums:
identifier           List
unknown              [
unknown              int]
separator            ,
unknown              target:
identifier           int
separator            )
operator             -
operator             >
identifier           List
unknown              [
unknown              int]:
identifier           prevMap
operator             =
separator            {
separator            }
unknown              #
identifier           val
operator             -
operator             >
identifier           index
identifier           for
identifier           i
separator            ,
identifier           n
identifier           in
identifier           enumerate
separator            (
identifier           nums
separator            )
unknown              :
identifier           diff
operator             =
identifier           target
operator             -
identifier           n
identifier           if
identifier           diff
identifier           in
unknown              prevMap:
keyword              return
unknown              [
identifier           prevMap
unknown              [
unknown              diff]
separator            ,
unknown              i]
identifier           prevMap
unknown              [
unknown              n]
operator             =
identifier           i
separator            (
identifier           int
identifier           int
separator            )
